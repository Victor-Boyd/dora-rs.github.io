"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[495],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(a),d=r,b=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return a?n.createElement(b,l(l({ref:t},s),{},{components:a})):n.createElement(b,l({ref:t},s))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6146:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={},l="Webcam Plot",i={unversionedId:"guides/getting-started/webcam_plot",id:"guides/getting-started/webcam_plot",title:"Webcam Plot",description:"1. Download already implemented operators by putting links in the dataflow. This example will launch a webcam plot stream.",source:"@site/docs/guides/getting-started/webcam_plot.md",sourceDirName:"guides/getting-started",slug:"/guides/getting-started/webcam_plot",permalink:"/docs/guides/getting-started/webcam_plot",draft:!1,editUrl:"https://github.com/dora-rs/dora-rs.github.io/edit/main/docs/guides/getting-started/webcam_plot.md",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Getting started",permalink:"/docs/guides/getting-started/first-dataflow"},next:{title:"Yolov5",permalink:"/docs/guides/getting-started/yolov5"}},p={},c=[],s={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"webcam-plot"},"Webcam Plot"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Download already implemented operators by putting links in the dataflow. This example will launch a webcam plot stream. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"nodes:\n  - id: webcam\n    operator:\n      python: https://raw.githubusercontent.com/dora-rs/dora/main/examples/python-operator-dataflow/webcam.py\n      inputs:\n        tick: dora/timer/millis/100\n      outputs:\n        - image\n  - id: plot\n    operator:\n      python: https://raw.githubusercontent.com/dora-rs/dora/main/examples/python-operator-dataflow/plot.py\n      inputs:\n        image: webcam/image \n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Make sure to have a webcam and cv2 install via: ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install opencv-python"))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"You can start attached to the dataflow as follows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"conda activate dora3.7\ndora start graphs/tutorials/webcam.yaml --attach --hot-reload --name webcam\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"--attach"),": enables you to wait for the dataflow to finish\nbefore returning."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"--hot-reload"),": enables you to modify Python Operator while the\ndataflow is running."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"--name"),": enables you to name a dataflow that might be simpler to use than the UUID.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"You should see a small webcam open up!",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Make sure to have a webcam and cv2 install via: ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install opencv-python"))))),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"/img/webcam.png",width:"800"})),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"To stop your dataflow, you can use ",(0,r.kt)("kbd",null,"ctrl"),"+",(0,r.kt)("kbd",null,"c"))))}m.isMDXComponent=!0}}]);