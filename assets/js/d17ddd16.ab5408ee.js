"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[746],{6354:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=r(4848),t=r(8453);const s={},i="Design Overview",a={id:"references/overview",title:"Design Overview",description:"The dora framework is structured into different components:",source:"@site/docs/references/overview.md",sourceDirName:"references",slug:"/references/overview",permalink:"/docs/references/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/dora-rs/dora-rs.github.io/edit/main/docs/references/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"references",previous:{title:"Framework",permalink:"/docs/references/library-vs-framework"},next:{title:"State Management",permalink:"/docs/references/state-management"}},d={},c=[{value:"Operators vs Custom Nodes",id:"operators-vs-custom-nodes",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"design-overview",children:"Design Overview"}),"\n",(0,o.jsx)(n.p,{children:"The dora framework is structured into different components:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"design diagram",src:r(7043).A+""})}),"\n",(0,o.jsx)(n.p,{children:"The following main components exist:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Nodes:"})," Dora nodes are separate, isolated processes that communicate with other nodes through the dora library. Nodes can be either a custom, user-specified program, or a dora runtime node, which allows to run dora ",(0,o.jsx)(n.em,{children:"operators"}),". Nodes implement their own ",(0,o.jsx)(n.code,{children:"main"})," function and thus have full control over their execution."]}),"\n",(0,o.jsxs)(n.p,{children:["Nodes use the dora ",(0,o.jsx)(n.em,{children:"library"})," to communicate with other nodes, which is available for multiple languages (Rust, C; maybe Python, WASM). Communication happens through a ",(0,o.jsx)(n.em,{children:"communication layer"}),", which will be ",(0,o.jsx)(n.code,{children:"zenoh"})," in our first version. We plan to add more options in the future. All communication layer implementations should be robust against disconnections, so operators should be able to keep running even if they lose the connection to the coordinator."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Operators:"})," Operators are light-weight, cooperative, library-based components that are executed by a dora runtime node. They must implement a specific interface, depending on the used language. Operators can use a wide range of advanced features provided by the dora runtime, for example priority scheduling or native deadline support."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Coordinator:"})," The coordinator is responsible for reading the dataflow from a YAML file, verifying it, and deploying the nodes and operators to the specified or automatically determined machines. It monitors the operator's health and implements high level cluster management functionality. For example, we could implement automatic scaling for cloud nodes or operator replication and restarts. The coordinator can be controlled through a command line program (CLI)."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"operators-vs-custom-nodes",children:"Operators vs Custom Nodes"}),"\n",(0,o.jsx)(n.p,{children:"There are two ways to implement an operation in dora: Either as a dora operator, or as a custom nodes. Both approaches have their advantages and drawbacks, as explained below. In general, it is recommended to create dora operators and only use custom nodes when necessary."}),"\n",(0,o.jsx)(n.p,{children:"Operators have the following advantages:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"They can use a wide range of advanced functionality provided by the dora runtime nodes. This includes special scheduling strategies and features such as deadlines."}),"\n",(0,o.jsxs)(n.li,{children:["They are ",(0,o.jsx)(n.em,{children:"light-weight"}),", so they only occupy minimal amounts of memory. This makes it possible to run thousands of operators on the same machine."]}),"\n",(0,o.jsx)(n.li,{children:"They can use runtime-managed state storage, for robustness or for sharing state with other operators."}),"\n",(0,o.jsxs)(n.li,{children:["They ",(0,o.jsx)(n.em,{children:"share the address space"})," with other operators on the same node, which makes communication much faster."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Custom nodes provide a different set of advantages:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Each node is a separate, isolated process, which can be important for security-critical operations."}),"\n",(0,o.jsx)(n.li,{children:"They support pinned resources. For example, a CPU core can be pinned to a custom node through the dataflow configuration file."}),"\n",(0,o.jsx)(n.li,{children:"They have full control over their execution, which allows to create complex input and wake-up rules."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},7043:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/overview-44ded447dae4275cd68d5144d3489f59.svg"},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var o=r(6540);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);