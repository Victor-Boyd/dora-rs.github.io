"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[3483],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=d(a),m=n,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||l;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9602:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const l={},o="Dora C++ Dataflow Example",i={unversionedId:"examples/c++-dataflow/README",id:"examples/c++-dataflow/README",title:"Dora C++ Dataflow Example",description:"This example shows how to create dora operators and custom nodes with C++.",source:"@site/docs/examples/c++-dataflow/README.md",sourceDirName:"examples/c++-dataflow",slug:"/examples/c++-dataflow/",permalink:"/zh-CN/docs/examples/c++-dataflow/",draft:!1,editUrl:"https://crowdin.com/dora-rs/zh-CN",tags:[],version:"current",frontMatter:{}},p={},d=[{value:"Compile and Run",id:"compile-and-run",level:2}],c={toc:d},s="wrapper";function u(e){let{components:t,...l}=e;return(0,n.kt)(s,(0,r.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dora-c-dataflow-example"},"Dora C++ Dataflow Example"),(0,n.kt)("p",null,"This example shows how to create dora operators and custom nodes with C++."),(0,n.kt)("p",null,"Dora does not provide a C++ API yet, but we can create adapters for either the C or Rust API. The ",(0,n.kt)("inlineCode",{parentName:"p"},"operator-rust-api")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"node-rust-api")," folders implement an example operator and node based on dora's Rust API, using the ",(0,n.kt)("inlineCode",{parentName:"p"},"cxx")," crate for bridging. The ",(0,n.kt)("inlineCode",{parentName:"p"},"operator-c-api")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"node-c-api")," show how to create operators and nodes based on dora's C API. Both approaches work, so you can choose the API that fits your application better."),(0,n.kt)("h2",{id:"compile-and-run"},"Compile and Run"),(0,n.kt)("p",null,"To try it out, you can use the ",(0,n.kt)("a",{target:"_blank",href:a(9215).Z},(0,n.kt)("code",null,"run.rs"))," binary. It performs all required build steps and then starts the dataflow. Use the following command to run it: ",(0,n.kt)("inlineCode",{parentName:"p"},"cargo run --example cxx-dataflow"),"."),(0,n.kt)("p",null,"For a manual build, follow these steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Create a ",(0,n.kt)("inlineCode",{parentName:"li"},"build")," folder in this directory (i.e., next to the ",(0,n.kt)("inlineCode",{parentName:"li"},"node.c")," file)"),(0,n.kt)("li",{parentName:"ul"},"Build the ",(0,n.kt)("inlineCode",{parentName:"li"},"cxx-dataflow-example-node-rust-api")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"cxx-dataflow-example-operator-rust-api")," crates:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"cargo build -p cxx-dataflow-example-node-rust-api --release\ncargo build -p cxx-dataflow-example-operator-rust-api --release\n"))),(0,n.kt)("li",{parentName:"ul"},"Compile the ",(0,n.kt)("inlineCode",{parentName:"li"},"dora-node-api-c")," crate into a static library.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"cargo build -p dora-node-api-c --release")),(0,n.kt)("li",{parentName:"ul"},"The resulting staticlib is then available under ",(0,n.kt)("inlineCode",{parentName:"li"},"../../target/release/libdora-node-api-c.a"),"."))),(0,n.kt)("li",{parentName:"ul"},"Compile the ",(0,n.kt)("inlineCode",{parentName:"li"},"node-c-api/main.cc")," (e.g. using ",(0,n.kt)("inlineCode",{parentName:"li"},"clang++"),") and link the staticlib",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For example, use the following command:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"clang++ node-c-api/main.cc <FLAGS> -std=c++14 -ldora_node_api_c -L ../../target/release --output build/node_c_api\n"))),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"<FLAGS>")," depend on the operating system and the libraries that the C node uses. The following flags are required for each OS:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Linux: ",(0,n.kt)("inlineCode",{parentName:"li"},"-lm -lrt -ldl -pthread")),(0,n.kt)("li",{parentName:"ul"},"macOS: ",(0,n.kt)("inlineCode",{parentName:"li"},"-framework CoreServices -framework Security -l System -l resolv -l pthread -l c -l m")),(0,n.kt)("li",{parentName:"ul"},"Windows:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"-ladvapi32 -luserenv -lkernel32 -lws2_32 -lbcrypt -lncrypt -lschannel -lntdll -liphlpapi\n-lcfgmgr32 -lcredui -lcrypt32 -lcryptnet -lfwpuclnt -lgdi32 -lmsimg32 -lmswsock -lole32\n-lopengl32 -lsecur32 -lshell32 -lsynchronization -luser32 -lwinspool\n-Wl,-nodefaultlib:libcmt -D_DLL -lmsvcrt\n")),"Also: On Windows, the output file should have an ",(0,n.kt)("inlineCode",{parentName:"li"},".exe")," extension: ",(0,n.kt)("inlineCode",{parentName:"li"},"--output build/c_node.exe")))))),(0,n.kt)("li",{parentName:"ul"},"Compile the ",(0,n.kt)("inlineCode",{parentName:"li"},"operator-c-api/operator.cc")," file into a shared library.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For example, use the following commands:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"clang++ -c operator-c-api/operator.cc -std=c++14 -o build/operator_c_api.o -fPIC\nclang++ -shared build/operator_c_api.o -o build/liboperator_c_api.so\n")),"Omit the ",(0,n.kt)("inlineCode",{parentName:"li"},"-fPIC")," argument on Windows. Replace the ",(0,n.kt)("inlineCode",{parentName:"li"},"liboperator_c_api.so")," name with the shared library standard library prefix/extensions used on your OS, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},".dll")," on Windows.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Build the dora coordinator and runtime:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Build the ",(0,n.kt)("inlineCode",{parentName:"li"},"dora-coordinator")," executable using ",(0,n.kt)("inlineCode",{parentName:"li"},"cargo build -p dora-coordinator --release")),(0,n.kt)("li",{parentName:"ul"},"Build the ",(0,n.kt)("inlineCode",{parentName:"li"},"dora-runtime")," executable using ",(0,n.kt)("inlineCode",{parentName:"li"},"cargo build -p dora-runtime --release"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Run the dataflow:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Start the ",(0,n.kt)("inlineCode",{parentName:"p"},"dora-coordinator"),", passing the paths to the dataflow file and the ",(0,n.kt)("inlineCode",{parentName:"p"},"dora-runtime")," as arguments:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"../../target/release/dora-daemon --run-dataflow dataflow.yml ../../target/release/dora-runtime\n")))))}u.isMDXComponent=!0},9215:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/files/run-a294cafcc46087d217ed5419479bc5b9.rs"}}]);