"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[873],{3905:(e,t,o)=>{o.d(t,{Zo:()=>s,kt:()=>h});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function p(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?p(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):p(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)o=p[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)o=p[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(o),m=n,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||p;return o?r.createElement(h,a(a({ref:t},s),{},{components:o})):r.createElement(h,a({ref:t},s))}));function h(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=o.length,a=new Array(p);a[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,a[1]=i;for(var c=2;c<p;c++)a[c]=o[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},4586:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>p,metadata:()=>i,toc:()=>c});var r=o(7462),n=(o(7294),o(3905));const p={},a="PID Control operator",i={unversionedId:"nodes_operators/pid_control_operator",id:"nodes_operators/pid_control_operator",title:"PID Control operator",description:"pid control operator computes the command that needs to be executed to follow the given waypoints.",source:"@site/docs/nodes_operators/pid_control_operator.md",sourceDirName:"nodes_operators",slug:"/nodes_operators/pid_control_operator",permalink:"/zh-CN/docs/nodes_operators/pid_control_operator",draft:!1,editUrl:"https://crowdin.com/dora-rs/zh-CN",tags:[],version:"current",frontMatter:{},sidebar:"nodes_operators",previous:{title:"Obstacle location operator",permalink:"/zh-CN/docs/nodes_operators/obstacle_location_operator"},next:{title:"Plot operator",permalink:"/zh-CN/docs/nodes_operators/plot_operator"}},l={},c=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Graph Description",id:"graph-description",level:2},{value:"Graph visualisation",id:"graph-visualisation",level:2},{value:"Hyperparameters consider changing",id:"hyperparameters-consider-changing",level:2}],s={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,n.kt)(d,(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"pid-control-operator"},"PID Control operator"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"pid")," control operator computes the command that needs to be executed to follow the given waypoints.\nIt reacts to the car current speed and position in a way that accelerates or brake according to previous inputs."),(0,n.kt)("h2",{id:"inputs"},"Inputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"waypoints coordinates to follow.")),(0,n.kt)("h2",{id:"outputs"},"Outputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"throttle, steering (rad) and braking.")),(0,n.kt)("h2",{id:"graph-description"},"Graph Description"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"  - id: pid_control_op\n    operator:\n      python: ../../operators/pid_control_op.py\n      outputs:\n        - control\n      inputs:\n        position: agent/position\n        speed: agent/speed\n        waypoints: fot_op/waypoints\n")),(0,n.kt)("h2",{id:"graph-visualisation"},"Graph visualisation"),(0,n.kt)("div",{align:"center"},(0,n.kt)("mermaid",{value:"        flowchart TB\n  agent\nsubgraph fot_op\n  fot_op/op[op]\nend\nsubgraph pid_control_op\n  pid_control_op/op[op]\nend\n  agent -- position --\x3e pid_control_op/op\n  agent -- speed --\x3e pid_control_op/op\n  fot_op/op -- waypoints --\x3e pid_control_op/op\n  pid_control_op/op -- control --\x3e agent"})),(0,n.kt)("h2",{id:"hyperparameters-consider-changing"},"Hyperparameters consider changing"),(0,n.kt)("p",null,"See: ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/PID_controller"},"https://en.wikipedia.org/wiki/PID_controller")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"pid_p = 0.1\npid_d = 0.0\npid_i = 0.05\ndt = 1.0 / 20   \n")),(0,n.kt)("p",null,"Example reaction:"),(0,n.kt)("p",{align:"center"},(0,n.kt)("img",{src:"https://upload.wikimedia.org/wikipedia/commons/c/c0/Change_with_Ki.png",width:"800"})))}u.isMDXComponent=!0}}]);