"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[1782],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3222:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={},i="Hot Reloading",l={unversionedId:"guides/Development/hot-reload",id:"guides/Development/hot-reload",title:"Hot Reloading",description:"Making development of robotic application fast and easy is at the core of our thinking for dora-rs.",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/guides/Development/hot-reload.md",sourceDirName:"guides/Development",slug:"/guides/Development/hot-reload",permalink:"/zh-CN/docs/guides/Development/hot-reload",draft:!1,editUrl:"https://crowdin.com/dora-rs/zh-CN",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Yolov5",permalink:"/zh-CN/docs/guides/getting-started/yolov5"},next:{title:"Logs",permalink:"/zh-CN/docs/guides/Debugging/logs"}},s={},p=[{value:"Purpose",id:"purpose",level:2},{value:"Usage",id:"usage",level:2},{value:"Fail-safe mechanism",id:"fail-safe-mechanism",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hot-reloading"},"Hot Reloading"),(0,a.kt)("p",null,"Making development of robotic application fast and easy is at the core of our thinking for dora-rs."),(0,a.kt)("p",null,"To reduce development time, we have added a ",(0,a.kt)("inlineCode",{parentName:"p"},"hot-reload")," option for Python Operators that enables dora-rs to watch for changes."),(0,a.kt)("p",null,"This is implemented in the likes of ",(0,a.kt)("inlineCode",{parentName:"p"},"npm start")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"uvicorn main:app --reload")),(0,a.kt)("h2",{id:"purpose"},"Purpose"),(0,a.kt)("p",null,"Sometimes reloading a robotic environment ( both virtual and physical ) might be really time-consuming. Being able to hot-reload an operator makes iteration on change a lot quicker."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dora start dataflow.yaml --attach --hot-reload\n")),(0,a.kt)("h2",{id:"fail-safe-mechanism"},"Fail-safe mechanism"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Failing the initialization on reloading is going to abort the reloading and not crash the operator."),(0,a.kt)("li",{parentName:"ul"},"State-values stored in the before-reloading Operator will be forwarded to the reloaded operator."),(0,a.kt)("li",{parentName:"ul"},"If new state-value is been set in the initialization, they will be available in the reloaded operator."),(0,a.kt)("li",{parentName:"ul"},"If state-value has been changed in the initialization but was already used before, they will keep their before-reloading value ( used or not ). It is therefore not possible to change currently being used state-value stored in the Operator class."),(0,a.kt)("li",{parentName:"ul"},"You can use global variable if you wish to have 'changeable' variables.")))}d.isMDXComponent=!0}}]);