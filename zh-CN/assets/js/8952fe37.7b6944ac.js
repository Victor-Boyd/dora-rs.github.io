"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[898],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,g=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7182:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},i="Yolov5",l={unversionedId:"guides/getting-started/yolov5",id:"guides/getting-started/yolov5",title:"Yolov5",description:"Making the video stream intelligent",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/guides/getting-started/yolov5.md",sourceDirName:"guides/getting-started",slug:"/guides/getting-started/yolov5",permalink:"/zh-CN/docs/guides/getting-started/yolov5",draft:!1,editUrl:"https://crowdin.com/dora-rs/zh-CN",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Webcam Plot",permalink:"/zh-CN/docs/guides/getting-started/webcam_plot"},next:{title:"Hot Reloading",permalink:"/zh-CN/docs/guides/Development/hot-reload"}},p={},s=[{value:"Making the video stream intelligent",id:"making-the-video-stream-intelligent",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"yolov5"},"Yolov5"),(0,a.kt)("h2",{id:"making-the-video-stream-intelligent"},"Making the video stream intelligent"),(0,a.kt)("p",null,"Let's add a ",(0,a.kt)("inlineCode",{parentName:"p"},"yolov5")," object detection operator that has already been written for us in ",(0,a.kt)("inlineCode",{parentName:"p"},"./operators/yolov5_op.py"),". This will help us detect object as bounding boxes within the webcam stream."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# operators/yolov5_op.py\n\n{{#include ../../operators/yolov5_op.py }}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Operators are composed of:"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"__init__")," methods that help create the object."),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"on_event")," methods that is called when an event is received. There is currently 4 event types: - ",(0,a.kt)("inlineCode",{parentName:"p"},"STOP"),": meaning that the operator was signalled to stop. - ",(0,a.kt)("inlineCode",{parentName:"p"},"INPUT"),": meannig that an input was received. - You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"dora_event['id']"),", to get the id. - You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"dora_event['data']"),", to get the data. - You can use ",(0,a.kt)("inlineCode",{parentName:"p"},"dora_event['meatadata']"),", to get the metadata. - ",(0,a.kt)("inlineCode",{parentName:"p"},"INPUT_CLOSED"),": meannig that an input source was closed. This could be useful if the input is critical for the well behaviour of the operator. - ",(0,a.kt)("inlineCode",{parentName:"p"},"ERROR"),": meaning that error message was received. - ",(0,a.kt)("inlineCode",{parentName:"p"},"UNKNOWN"),": meaning that an unknown message was received."),(0,a.kt)("p",{parentName:"blockquote"},"We have encapsulated ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," event in a ",(0,a.kt)("inlineCode",{parentName:"p"},"on_input")," method but this is not required.")),(0,a.kt)("p",null,"To add an operator within the dataflow. You need to explicit what the input and output are. You can reference node by their ids:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# graphs/tutorials/webcam_yolov5.yaml\n\n{{#include ../../graphs/tutorials/webcam_yolov5.yaml }}\n")),(0,a.kt)("p",null,"In this case, we have connected the ",(0,a.kt)("inlineCode",{parentName:"p"},"webcam/image")," output to the ",(0,a.kt)("inlineCode",{parentName:"p"},"image")," input of yolov5. ",(0,a.kt)("inlineCode",{parentName:"p"},"yolov5/bbox")," is then connected to the ",(0,a.kt)("inlineCode",{parentName:"p"},"plot/obstacles_bbox"),"."),(0,a.kt)("p",null,"Inputs are prefixed by the node name to be able to separate name conflicts."),(0,a.kt)("p",null,"To run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dora up\ndora start graphs/tutorials/webcam_yolov5.yaml --attach\n")),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/webcam_yolov5.png",width:"800"})),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more information on ",(0,a.kt)("inlineCode",{parentName:"p"},"yolov5"),", go on ",(0,a.kt)("a",{parentName:"p",href:"/docs/nodes_operators/yolov5_op"},"our ",(0,a.kt)("inlineCode",{parentName:"a"},"yolov5")," detail page"))))}u.isMDXComponent=!0}}]);